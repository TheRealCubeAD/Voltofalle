<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1040</x>
      <y>304</y>
      <w>432</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>View
--
private Control control
--
public View(Control c)
public void update(Observable o, Object arg)
--
Responsibilities
-- Verwaltet GUI
-- Nimmt Eingaben vom Nutzer an
-- Meldet Eingaben an den Controller</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>0</y>
      <w>392</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Control
--
private Model model
--
public Control()
--
Responsibilities
-- Kontrolliert Model und View
-- Nimmt Eingaben des VIEW entgegen und leitet sie an die zuständige Klasse weiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>208</x>
      <y>296</y>
      <w>392</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Model
--
public Model()
--

--
Responsibilities
-- Berechnet die Spieldaten</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1024</x>
      <y>64</y>
      <w>360</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
&lt; leitet Eingaben weiter
ändert Zustand durch Beobachter &gt;
m2=1
</panel_attributes>
    <additional_attributes>10.0;20.0;420.0;20.0;420.0;300.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>392</x>
      <y>64</y>
      <w>264</w>
      <h>248</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0
m2=1

&lt; Steuert</panel_attributes>
    <additional_attributes>310.0;20.0;10.0;20.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>592</x>
      <y>360</y>
      <w>464</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
&lt; beobachtet</panel_attributes>
    <additional_attributes>10.0;20.0;560.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1608</x>
      <y>576</y>
      <w>240</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Screen
{abstract}
--
private View view
--
protected void userAction(String action)
--
Responsibilities
-- Template für einzelne Cards im Main-JPanel</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>936</y>
      <w>232</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>MainmenuScreen
--
private JButton startGame
private JButton startSolver
private View view
--
public MainmenuScreen(View v)
public void actionPerformed(ActionEvent e)
--
Responsibilities
-- Implementiert:
   Button zum Starten des Spiels
   Button zum Starten des Solvers
   
-- Erstes Panel das sichtbar wird</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>720</y>
      <w>776</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>950.0;10.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1048</x>
      <y>936</y>
      <w>256</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>GameScreen
--
private JButton ende
(private JButton notes)
private JLabel score
private JPanel grid
private View view
--
public GameScreen(View v)
public void actionPerformed(ActionEvent e)
--
Responsibilities
-- Implementiert:
   Anzeige des Punktestandes
   Anzeige der auswählbaren Spielkarten
   Anzeige der Punkte- und Volto-Indikatoren
   (Button zum Togglen der Notizfunktion)
   Button zum Beenden des Spiels</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1336</x>
      <y>936</y>
      <w>256</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>SolverScreen
--
private JButton ende
private JPanel grid
private View view
--
public SolverScreen(View v)
public void actionPerformed(ActionEvent e)
--
Responsibilities
-- Implementiert:
   Anzeige der Spielkarten
   Eingabe von Punkte- und Volto-Indikatoren
   Button um zum Main Menu zurück zu kehren</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1192</x>
      <y>720</y>
      <w>512</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>620.0;10.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>720</y>
      <w>240</w>
      <h>232</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>448</y>
      <w>184</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
gibt Eingaben ^
</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;610.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1648</x>
      <y>344</y>
      <w>96</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>JPanel
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>368</y>
      <w>200</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1680</x>
      <y>400</y>
      <w>24</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>448</y>
      <w>144</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
gibt Eingaben ^
\/ gibt Werte
</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;610.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1448</x>
      <y>448</y>
      <w>104</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
gibt Eingaben ^
\/ gibt Werte
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;610.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>672</x>
      <y>1312</y>
      <w>256</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Indicator
--
private JLabel volt
private JLabel multiplikator
--
public Indicator()
--
Responsibilities
-- Enthält die Informationen über die Zeile/Spalte</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1096</x>
      <y>1312</y>
      <w>176</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Grid
--
private Indicator[] indicators
private JButton[][] cards
private GameScreen gamescreen

--
public Grid(GameScreen gs)
--
Responsibilities
-- Enthält die einzelnen
   Spielkarten/Indikatoren und
   übergibt den Buttons
   den ActionListener</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1168</x>
      <y>1152</y>
      <w>80</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
gibt Werte \/

</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>1376</y>
      <w>192</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=10
gibt Werte &gt;</panel_attributes>
    <additional_attributes>220.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1376</x>
      <y>1312</y>
      <w>176</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>Grid
--
private Indicator[] indicators
private JLabel[][] cards
private GameScreen gamescreen

--
public Grid(GameScreen gs)
public updateLabels(double[][])
--
Responsibilities
-- Enthält die einzelnen
   Spielkarten/Indikatoren, updated die Spielkarten und
   übergibt dem SolverScreen die
   Werte</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1456</x>
      <y>1152</y>
      <w>88</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
gibt Werte ^
gibt Werte \/

</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1712</x>
      <y>1312</y>
      <w>256</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Indicator
--
private JTextField volt
private JTextField multiplikator
--
public Indicator()
--
Responsibilities
-- Enthält die Informationen über die Zeile/Spalte
   und gibt diese weiter</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1544</x>
      <y>1376</y>
      <w>184</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=10
&lt; gibt Werte</panel_attributes>
    <additional_attributes>10.0;20.0;210.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1520</x>
      <y>16</y>
      <w>288</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>Todo Morgen:
Model modellieren
Wie interagieren die einzelnen Klassen miteinander?
Welche Methoden werden dafür benötigt?

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
